/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import clases.Conexion;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author luism
 */
public class Grafica_Status_Equipos extends javax.swing.JFrame {

    /**
     * Creates new form Grafica_Status_Equipos
     */
    public Grafica_Status_Equipos() {
        initComponents();
        this.setLocationRelativeTo(null);
        setTitle("Usuario " + Login.user + ".");
        ImageIcon wallpaper = new ImageIcon("src/images/wallpaperPrincipal.jpg");
        Icon icono = new ImageIcon(wallpaper.getImage().getScaledInstance(label_wallpaper.getWidth(),
                label_wallpaper.getHeight(), Image.SCALE_DEFAULT));
        label_wallpaper.setIcon(icono);

        int total = 0;
        boolean ultimo;
        String cantidad;

        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement("select status from equipos where status = 'Nuevo ingreso'");
            ResultSet rs = pst.executeQuery();
            ultimo = rs.last();
            if (ultimo) {
                total = rs.getRow();
                cantidad = String.valueOf(total);
                t_nuevo.setText(cantidad);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al cargar los datos");
        }

        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement("select status from equipos where status = 'Revisado'");
            ResultSet rs = pst.executeQuery();
            ultimo = rs.last();
            if (ultimo) {
                total = rs.getRow();
                cantidad = String.valueOf(total);
                t_revisado.setText(cantidad);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al cargar los datos");
        }

        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement("select status from equipos where status = 'En reparacion'");
            ResultSet rs = pst.executeQuery();
            ultimo = rs.last();
            if (ultimo) {
                total = rs.getRow();
                cantidad = String.valueOf(total);
                t_en_reparacion.setText(cantidad);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al cargar los datos");
        }

        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement("select status from equipos where status = 'Reparado'");
            ResultSet rs = pst.executeQuery();
            ultimo = rs.last();
            if (ultimo) {
                total = rs.getRow();
                cantidad = String.valueOf(total);
                t_reparado.setText(cantidad);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al cargar los datos");
        }

        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement("select status from equipos where status = 'Entregado'");
            ResultSet rs = pst.executeQuery();
            ultimo = rs.last();
            if (ultimo) {
                total = rs.getRow();
                cantidad = String.valueOf(total);
                t_entregado.setText(cantidad);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al cargar los datos");
        }
    }

    @Override
    public Image getIconImage() {

        Image retValue = Toolkit.getDefaultToolkit().
                getImage(ClassLoader.getSystemResource("images/icon.png"));
        return retValue;
    }

    boolean bandera = false;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        t_entregado = new javax.swing.JTextField();
        t_en_reparacion = new javax.swing.JTextField();
        t_nuevo = new javax.swing.JTextField();
        t_revisado = new javax.swing.JTextField();
        t_reparado = new javax.swing.JTextField();
        label_wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Grafica de status de equipos");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 20, -1, -1));

        jLabel11.setFont(new java.awt.Font("Harrington", 1, 18)); // NOI18N
        jLabel11.setText("Data System");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 460, -1, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/grafica.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 320, 120, 80));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Graficar");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 290, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Nuevo ingreso");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Revisado");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("En reparacion");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Reparado");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 340, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Entregado");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 370, -1, -1));

        t_entregado.setEditable(false);
        t_entregado.setBackground(new java.awt.Color(204, 204, 255));
        t_entregado.setText("0");
        getContentPane().add(t_entregado, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 370, 40, -1));

        t_en_reparacion.setEditable(false);
        t_en_reparacion.setBackground(new java.awt.Color(204, 204, 255));
        t_en_reparacion.setText("0");
        getContentPane().add(t_en_reparacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 400, 40, -1));

        t_nuevo.setEditable(false);
        t_nuevo.setBackground(new java.awt.Color(204, 204, 255));
        t_nuevo.setText("0");
        getContentPane().add(t_nuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 340, 40, -1));

        t_revisado.setEditable(false);
        t_revisado.setBackground(new java.awt.Color(204, 204, 255));
        t_revisado.setText("0");
        getContentPane().add(t_revisado, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 370, 40, -1));

        t_reparado.setEditable(false);
        t_reparado.setBackground(new java.awt.Color(204, 204, 255));
        t_reparado.setText("0");
        getContentPane().add(t_reparado, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 340, 40, -1));
        getContentPane().add(label_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 610, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        bandera = true;
        repaint();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Grafica_Status_Equipos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Grafica_Status_Equipos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Grafica_Status_Equipos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Grafica_Status_Equipos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Grafica_Status_Equipos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel label_wallpaper;
    private javax.swing.JTextField t_en_reparacion;
    private javax.swing.JTextField t_entregado;
    private javax.swing.JTextField t_nuevo;
    private javax.swing.JTextField t_reparado;
    private javax.swing.JTextField t_revisado;
    // End of variables declaration//GEN-END:variables

    public int MayorValor(int nuevo, int revisado, int en_reparacion, int reparado, int entregado) {
        if (nuevo > revisado && nuevo > en_reparacion && nuevo > reparado && nuevo > entregado) {
            return nuevo;
        } else if (revisado > en_reparacion && revisado > reparado && revisado > entregado) {
            return revisado;
        } else if (en_reparacion > reparado && en_reparacion > entregado) {
            return en_reparacion;
        } else if (reparado > entregado) {
            return reparado;
        } else {
            return entregado;
        }
    }

    public void paint(Graphics g) {
        super.paint(g);
        if (bandera == true) {

            String string_nuevo = t_nuevo.getText();
            String string_revisado = t_revisado.getText();
            String string_en_reparacion = t_en_reparacion.getText();
            String string_reparado = t_reparado.getText();
            String string_entregado = t_entregado.getText();

            int int_nuevo = Integer.parseInt(string_nuevo);
            int int_revisado = Integer.parseInt(string_revisado);
            int int_en_reparacion = Integer.parseInt(string_en_reparacion);
            int int_reparado = Integer.parseInt(string_reparado);
            int int_entregado = Integer.parseInt(string_entregado);

            int valorMayor = MayorValor(int_nuevo, int_revisado, int_en_reparacion, int_reparado, int_entregado);

            int largo_nuevo = int_nuevo * 400 / valorMayor;
            int largo_revisado = int_revisado * 400 / valorMayor;
            int largo_en_reparacion = int_en_reparacion * 400 / valorMayor;
            int largo_reparado = int_reparado * 400 / valorMayor;
            int largo_entregado = int_entregado * 400 / valorMayor;

            Font oldFont = getFont();
            Font fuente = new Font("Arial", Font.BOLD, 12);
            g.setFont(fuente);
            g.setColor(Color.WHITE);
            g.fillRect(110, 100, largo_nuevo, 20);
            g.drawString("Nuevo Ingreso", 15, 115);

            g.setColor(Color.WHITE);
            g.fillRect(110, 140, largo_revisado, 20);
            g.drawString("Revisado", 15, 155);

            g.setColor(Color.WHITE);
            g.fillRect(110, 180, largo_en_reparacion, 20);
            g.drawString("En Reparacion", 15, 195);

            g.setColor(Color.WHITE);
            g.fillRect(110, 220, largo_reparado, 20);
            g.drawString("Reparado", 15, 235);

            g.setColor(Color.WHITE);
            g.fillRect(110, 260, largo_entregado, 20);
            g.drawString("Entregado", 15, 275);

        }

    }

}
